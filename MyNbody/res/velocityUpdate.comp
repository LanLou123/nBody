#version 450 core


layout (local_size_x = 256) in;

layout (binding = 0, std430) buffer _particle_pos
{
	vec4 particle_pos[];
};

layout (binding = 1, std430) buffer _particle_vel
{
	vec4 particle_vel[];
};

shared vec4 pos_cache[gl_WorkGroupSize.x];

vec3 force(in vec3 dis, in float m){
	return m * dis / pow(dot(dis, dis) + 0.03, 1.5f);
}

uniform float particle_count;


void main(){

	float damp = 0.99999;
	float dt = 0.00001;
	float G = 100.0f;

	uint id = gl_GlobalInvocationID.x;
	vec3 pos;

	pos = particle_pos[id].xyz;

	vec3 acc = vec3(0);
	for (uint i = 0;i< gl_NumWorkGroups.x * gl_WorkGroupSize.x; i+= gl_WorkGroupSize.x){
			pos_cache[gl_LocalInvocationID.x] = particle_pos[gl_LocalInvocationID.x + i];
			groupMemoryBarrier();
			barrier();
			for(int j = 0;j < gl_WorkGroupSize.x ; ++j){
				vec4 pos_j = pos_cache[j];
				acc += G * force(pos_j.xyz - pos, pos_j.w);
			}
	}
	vec3 vel_out =  particle_vel[id].xyz * damp + acc * dt;
	//vec3 maintain = particle_vel[id].xyz;
	particle_vel[id] = vec4(vel_out, 0);
}